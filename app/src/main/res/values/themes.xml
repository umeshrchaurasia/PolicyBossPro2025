<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.Policybossprov34" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Customize your theme here. -->
        <!--actionbar color, EditText cursor color-->
            <item name="colorPrimary">@color/colorAccent</item>



            <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
            <item name="colorAccent">@color/colorAccent</item>

           <!--status bar color-->
           <item name="android:statusBarColor">@color/colorPrimaryDark</item>

<!--        <item name="colorOnSurface">@color/colorText</item>-->
        <!--<item name="android:windowBackground">@color/window_background</item>-->
        <!-- <item name="android:windowBackground">@color/background</item>-->
        <item name="android:windowBackground">@color/white</item>
        <item name="android:windowActivityTransitions">true</item>
        <!--<item name="android:textColorPrimary">@color/header_text_color</item>-->
        <!--<item name="android:textColorHint">@color/secondary_text_color</item>-->

        <!--  It should be true otherwise action mode will not overlay toolbar -->
        <item name="windowActionModeOverlay">true</item>
        <!--  For Custom Action Mode Background Color/Drawable -->
        <item name="actionModeBackground">@color/colorAccent</item>

        <!--For Material TextInput Styler-->
        <item name="textInputStyle">@style/textInputLayoutStyle</item>

        <!-- Set the cursor and text selection handle color to blue -->
     <!--    Note :If colorSecondary is not explicitly set, it typically falls back to colorPrimary.-->
        <item name="colorControlActivated">@color/colorPrimary</item>


        <!-- NavigationView Selected Item Colors  -->
         <!--   Note : Only working on Theme.MaterialComponents.DayNight.NoActionBar -->
        <item name="colorControlHighlight">@color/colorAccentPressed</item>
        <item name="colorOnPrimary">@color/white</item>




    </style>

    <style name="Theme.Policybossprov34" parent="Base.Theme.Policybossprov34" />




    <!-- Define the Splash Screen theme -->
<!--    <style name="Theme.Splash" parent="Theme.SplashScreen">-->
<!--        &lt;!&ndash; Splash screen background &ndash;&gt;-->
<!--        <item name="windowSplashScreenBackground">@color/bg_dashboard</item>-->
<!--        &lt;!&ndash; Splash screen icon &ndash;&gt;-->
<!--        <item name="windowSplashScreenAnimatedIcon">@mipmap/ic_policyboss</item>-->
<!--        &lt;!&ndash; Duration for splash screen icon animation &ndash;&gt;-->
<!--        <item name="windowSplashScreenAnimationDuration">300</item>-->
<!--        &lt;!&ndash; Post-splash screen theme (main app theme) &ndash;&gt;-->
<!--        <item name="postSplashScreenTheme">@style/Theme.Policybossprov34</item>-->
<!--    </style>-->

    <!-- Define a custom splash screen theme -->
    <style name="SplashTheme" parent="Theme.AppCompat.NoActionBar">
        <item name="android:windowBackground">@drawable/splash_background</item>

        <!-- Post-splash screen theme (main app theme) -->
        <item name="postSplashScreenTheme">@style/Theme.Policybossprov34</item>
    </style>


    <!-- Button style -->
    <style name="buttonStyle" parent="Widget.Material3.Button">
        <item name="android:layout_height">@dimen/_48dp</item>
        <item name="android:textSize">17sp</item>
        <item name="android:textColor">@color/white</item>
<!--        <item name="fontFamily">@font/roboto_bold</item>-->
        <!--        <item name="backgroundTint">@color/colorAccent</item>-->
        <item name="backgroundTint">@null</item>    <!--   for applying custom drawable our backgroundTint must null -->
        <item name="android:background">@drawable/rectangle_button</item>
        <item name="android:padding">2dp</item>

        <!-- Add any other desired button attributes here -->
    </style>


    <!--Dialog style-->
    <style name="ThemeOverlay.App.MaterialAlertDialog" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
        <item name="colorPrimary">@color/white</item>
        <item name="colorSecondary">@color/white</item>
        <item name="colorSurface">@color/white</item>
        <!--body text color -->
        <item name="colorOnSurface">@color/colorPrimary</item>
        <item name="alertDialogStyle">@style/MaterialAlertDialog.App</item>
        <!--title text color-->
        <item name="materialAlertDialogTitleTextStyle">@style/MaterialAlertDialog.App.Title.Text
        </item>
        <item name="buttonBarPositiveButtonStyle">@style/Widget.App.Button</item>
        <item name="buttonBarNeutralButtonStyle">@style/Widget.App.Button</item>
        <item name="buttonBarNegativeButtonStyle">@style/Widget.App.Button.Negative</item>
    </style>

    <style name="MaterialAlertDialog.App" parent="MaterialAlertDialog.MaterialComponents">
        <item name="shapeAppearance">@style/ShapeAppearance.App.MediumComponent</item>
    </style>

    <style name="MaterialAlertDialog.App.Title.Text" parent="MaterialAlertDialog.MaterialComponents.Title.Text">
        <item name="android:textColor">@color/colorPrimary</item>
    </style>


    <style name="Widget.App.Button" parent="Widget.MaterialComponents.Button.TextButton.Dialog">
        <item name="materialThemeOverlay">
            @style/Widget.MaterialComponents.Button.TextButton.Dialog
        </item>
        <item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>
        <item name="android:textColor">@color/colorAccent</item>
        <item name="android:textStyle">normal</item>
    </style>

    <style name="Widget.App.Button.Negative" parent="Widget.App.Button">
        <item name="android:textColor">@color/black</item>
    </style>

    <style name="ShapeAppearance.App.MediumComponent" parent="ShapeAppearance.MaterialComponents.MediumComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">8dp</item>
    </style>

    <style name="ShapeAppearance.App.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">4dp</item>
    </style>


    <!-- Mark : TextInputLayoutStyle  -->
    <style name="textInputLayoutStyle" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">


        <item name="android:textColor">@color/white</item>

        <!--after selecting edittext header text color-->
        <item name="hintTextColor">@color/white</item>

        <!--before hint text color-->
        <item name="android:textColorHint">@color/white</item>
        <item name="boxStrokeErrorColor">@color/error_red</item>

        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_width">match_parent</item>

        <item name="android:textSize">17sp</item>

<!--        <item name="fontFamily">@font/roboto_regular</item>-->

        <!--Error show specific to edittext with error message-->
        <item name="errorEnabled">false</item>


        <!--icon color inside box-->
        <item name="startIconTint">@color/default_icon_color</item>
        <item name="endIconTint">@color/default_icon_color</item>

        <!--type of box-->
        <item name="boxBackgroundMode">filled</item>

        <item name="endIconMode">clear_text</item>
          <item name="boxBackgroundColor">@color/transparent</item>

        <item name="boxStrokeWidthFocused">2dp</item> <!--after focused width-->
        <item name="boxStrokeWidth">0.7dp</item> <!--before focused width-->
        <item name="boxStrokeColor">@color/colorPrimary</item>

        <item name="android:inputType">text</item>
        <item name="android:imeOptions">actionNext</item>
        <item name="android:lines">1</item>




    </style>

    <style name="CustomTextInputEditText" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="android:textSize">16sp</item> <!-- Set the desired text size here -->
        <item name="android:background">@color/transparent</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:ellipsize">end</item>
        <item name="android:inputType">text</item>
        <item name="android:lines">1</item>
        <item name="android:maxLength">50</item>
        <item name="android:maxLines">1</item>

        <item name="android:minHeight">48dp</item>
        <item name="android:paddingBottom">8dp</item>
    </style>

    <style name="OTPTextInputEditText" parent="CustomTextInputEditText">

        <item name="android:textColor">@color/black</item>

        <item name="android:textSize">17sp</item>



    </style>




    <style name="textInputLayoutStyle2" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">

        <!-- General text color -->
        <item name="android:textColor">@color/black</item>

        <!-- Hint text color when the field is selected -->
        <item name="hintTextColor">@color/colorPrimary</item>

        <!-- Hint text color when the field is not selected -->
        <item name="android:textColorHint">@color/text_edit_color</item>


        <!-- Error state customization -->
        <item name="boxStrokeErrorColor">@color/error_red</item>

        <!-- Box dimensions -->
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_width">match_parent</item>

        <item name="hintTextAppearance">@style/CustomHintText</item>  <!-- NEW: Custom hint appearance -->


        <!-- Increase space between the floating hint and the input text -->
<!--        <item name="boxCollapsedPaddingTop">40dp</item> &lt;!&ndash; Adjust this value as needed &ndash;&gt;-->

        <!-- Density-related properties -->
        <item name="android:minHeight">@dimen/_48dp</item>      <!-- NEW: Reduced from default 48dp -->
        <item name="android:paddingTop">2dp</item>      <!-- NEW: Remove extra padding -->
        <item name="android:paddingBottom">0dp</item>   <!-- NEW: Remove extra padding -->



        <!-- Icon colors -->
        <item name="startIconTint">@color/gray_button</item>
        <item name="endIconTint">@color/gray_button</item>

        <!-- Outlined box style with a transparent background -->

        <item name="boxBackgroundMode">filled</item>
        <item name="boxBackgroundColor">@color/transparent</item>

        <!-- Border width when focused and not focused -->
        <item name="boxStrokeWidthFocused">2dp</item> <!-- After focused width -->
        <item name="boxStrokeWidth">0.7dp</item> <!-- Before focused width -->
        <!-- Border color settings -->
        <item name="boxStrokeColor">@color/colorPrimary</item> <!-- Black color border by default -->
        <!-- End icon settings (e.g., clear text icon) -->
        <item name="endIconMode">clear_text</item>

        <!-- EditText input properties -->
        <item name="android:inputType">text</item>
        <item name="android:imeOptions">actionNext</item>
        <item name="android:lines">1</item>

        <!-- Error message handling -->
        <item name="errorEnabled">false</item>



    </style>


    <style name="TextInputEditText2" parent="Widget.MaterialComponents.TextInputEditText.FilledBox">

        <item name="android:background">@color/transparent</item>
        <item name="android:textColor">@color/black</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:enabled">false</item>


        <item name="android:minHeight">36dp</item>      <!-- NEW: Set minimum height -->
        <item name="android:paddingTop">18dp</item>      <!-- hint Text giong more up side -->
        <item name="android:paddingBottom">0dp</item>   <!-- NEW: Added for balance -->
        <item name="android:layout_marginTop">8dp</item> <!-- MODIFIED: Reduced from 8dp -->



        <item name="android:textSize">17sp</item>
        <item name="android:inputType">textCapWords</item>


        <!-- Optional: Text colors for hint and focused state -->
        <item name="hintTextColor">@color/darkGray</item>
        <item name="android:textColorHint">@color/darkGray</item>

    </style>

    <style name="CustomHintText" parent="TextAppearance.Design.Hint">
        <item name="android:textSize">14sp</item>
        <item name="android:textStyle"> bold</item>
        <item name="android:layout_marginBottom">8dp</item>
        <item name="android:paddingBottom">4dp</item>
    </style>


</resources>